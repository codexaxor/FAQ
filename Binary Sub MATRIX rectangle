int matrix[1000+9][1000+9];

int Func(int r, int c)
{
    int i,j,k;
    
    for (i=0; i<r; i++) {
        for (j=0; j<c; j++) {
            if (matrix[i][j] == 1) {
                matrix[i][j] = (matrix[i-1][j] + 1);
            }
        }
    }
    
    int mx = -1;
    
    for (i=0; i<r; i++) {
        for (j=0; j<c; j++) {
            
            
            int pivot = matrix[i][j];
            
            for (k=j+1; k<c && matrix[i][j] <= matrix[i][k] ; k++) {
                pivot += matrix[i][j];
            }
            for (k=j-1; k>=0 && matrix[i][j] <= matrix[i][k]; k--) {
                pivot += matrix[i][j];
            }
            
            if ( pivot > mx) {
                mx = pivot;
            }
        }
    }
    
    return mx;
    
}

int main()
{
   
    
    rd;
    
    int i,j,T,n,r,c,vlu;
    
    while ( cin>>r>>c ) {
        
        
        if (r == 0 && c == 0) {
            return 0;
        }
        // apply input change technique
        for (i=0; i<r; i++) {
            for (j=0; j<c; j++) {
                cin>>vlu;
                if (vlu == 0) {
                    matrix[i][j] = 1;
                }
                else
                    matrix[i][j] = 0;
            }
        }
        
        cout<<Func(r,c)<<endl;
        
    }
    
    return 0;
}
